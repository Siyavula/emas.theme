(function(){var b=function(e,f){return function(){return e.apply(f,arguments)}},a=Object.prototype.hasOwnProperty,d=function(h,f){for(var e in f){if(a.call(f,e)){h[e]=f[e]}}function g(){this.constructor=h}g.prototype=f.prototype;h.prototype=new g;h.__super__=f.prototype;return h},c=Array.prototype.indexOf||function(g){for(var f=0,e=this.length;f<e;f++){if(this[f]===g){return f}}return -1};Annotator.Plugin.Store=(function(){d(e,Annotator.Plugin);e.prototype.events={annotationCreated:"annotationCreated",annotationDeleted:"annotationDeleted",annotationUpdated:"annotationUpdated"};e.prototype.options={prefix:"/store",autoFetch:true,annotationData:{},loadFromSearch:false,urls:{create:"/annotations",read:"/annotations/:id",update:"/annotations/:id",destroy:"/annotations/:id",search:"/search"}};function e(g,f){this._onError=b(this._onError,this);this._onBeforeSend=b(this._onBeforeSend,this);this._onLoadAnnotationsFromSearch=b(this._onLoadAnnotationsFromSearch,this);this._onLoadAnnotations=b(this._onLoadAnnotations,this);this._getAnnotations=b(this._getAnnotations,this);e.__super__.constructor.apply(this,arguments);this.annotations=[]}e.prototype.pluginInit=function(){var f;if(!Annotator.supported()){return}f=this.element.data("annotator:auth");if(f){return f.withToken(this._getAnnotations)}else{return this._getAnnotations()}};e.prototype._getAnnotations=function(){if(this.options.loadFromSearch){return this.loadAnnotationsFromSearch(this.options.loadFromSearch)}else{return this.loadAnnotations()}};e.prototype.annotationCreated=function(f){if(c.call(this.annotations,f)<0){this.registerAnnotation(f);return this._apiRequest("create",f,b(function(g){if(!(g.id!=null)){console.warn("Warning: No ID returned from server for annotation ",f)}return this.updateAnnotation(f,g)},this))}else{return this.updateAnnotation(f,{})}};e.prototype.annotationUpdated=function(f){if(c.call(this.annotations,f)>=0){return this._apiRequest("update",f,(b(function(g){return this.updateAnnotation(f,g)},this)))}};e.prototype.annotationDeleted=function(f){if(c.call(this.annotations,f)>=0){return this._apiRequest("destroy",f,(b(function(){return this.unregisterAnnotation(f)},this)))}};e.prototype.registerAnnotation=function(f){return this.annotations.push(f)};e.prototype.unregisterAnnotation=function(f){return this.annotations.splice(this.annotations.indexOf(f),1)};e.prototype.updateAnnotation=function(f,g){if(c.call(this.annotations,f)<0){console.error("Trying to update unregistered annotation!")}else{$.extend(f,g)}return $(f.highlights).data("annotation",f)};e.prototype.loadAnnotations=function(){return this._apiRequest("read",null,this._onLoadAnnotations)};e.prototype._onLoadAnnotations=function(f){if(f==null){f=[]}this.annotations=f;return this.annotator.loadAnnotations(f.slice())};e.prototype.loadAnnotationsFromSearch=function(f){return this._apiRequest("search",f,this._onLoadAnnotationsFromSearch)};e.prototype._onLoadAnnotationsFromSearch=function(f){if(f==null){f={}}return this._onLoadAnnotations(f.rows||[])};e.prototype.dumpAnnotations=function(){var j,i,g,h,f;h=this.annotations;f=[];for(i=0,g=h.length;i<g;i++){j=h[i];f.push(JSON.parse(this._dataFor(j)))}return f};e.prototype._apiRequest=function(i,j,k){var l,g,h,f;l=j&&j.id;f=this._urlFor(i,l);g=this._apiRequestOptions(i,j,k);h=$.ajax(f,g);h._id=l;h._action=i;return h};e.prototype._apiRequestOptions=function(g,h,i){var f;f={type:this._methodFor(g),beforeSend:this._onBeforeSend,dataType:"json",success:i||function(){},error:this._onError};if(g==="search"){f=$.extend(f,{data:h})}else{f=$.extend(f,{data:h&&this._dataFor(h),contentType:"application/json; charset=utf-8"})}return f};e.prototype._urlFor=function(h,i){var f,g;f=i!=null?"/"+i:"";g=this.options.prefix||"/";g+=this.options.urls[h];g=g.replace(/\/:id/,f);return g};e.prototype._methodFor=function(g){var f;f={create:"POST",read:"GET",update:"PUT",destroy:"DELETE",search:"GET"};return f[g]};e.prototype._dataFor=function(f){var g,h;h=f.highlights;delete f.highlights;$.extend(f,this.options.annotationData);g=JSON.stringify(f);if(h){f.highlights=h}return g};e.prototype._onBeforeSend=function(j){var i,g,h,f;i=this.element.data("annotator:headers");if(i){f=[];for(g in i){h=i[g];f.push(j.setRequestHeader(g,h))}return f}};e.prototype._onError=function(h){var g,f;g=h._action;f="Sorry we could not "+g+" this annotation";if(h._action==="search"){f="Sorry we could not search the store for annotations"}else{if(h._action==="read"&&!h._id){f="Sorry we could not "+g+" the annotations from the store"}}switch(h.status){case 401:f="Sorry you are not allowed to "+g+" this annotation";break;case 404:f="Sorry we could not connect to the annotations store";break;case 500:f="Sorry something went wrong with the annotation store"}Annotator.showNotification(f,Annotator.Notification.ERROR);return console.error("API request failed: '"+h.status+"'")};return e})()}).call(this);